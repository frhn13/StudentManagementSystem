@page "/Login"

@inject NavigationManager NavigationManager
@inject LoginClient loginClient

@rendermode InteractiveServer

<div class="mb-10">
    <PageTitle>Login</PageTitle>
    <h2>Login Page</h2>
</div>

@if (loginDetails is null)
{
    <p>Currently Loading...</p>
}
else if (!loginClient.GetLoggedInDetails().Username.Equals(string.Empty))
{
    <p>Page inaccessible</p>
}
else
{
    <div class="row">
        <div class="flex-center">
            <EditForm Model="@loginDetails" FormName="Login" OnValidSubmit="HandleSubmitAsync">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label for="username" class="form-label">Username</label>
                    <InputText id="username" class="form-control" @bind-Value="loginDetails.Username" />
                    <ValidationMessage For="() => loginDetails.Username" />
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <InputText id="password" type="Password" class="form-control" @bind-Value="loginDetails.Password" />
                    <ValidationMessage For="() => loginDetails.Password" />
                </div>
                <button type="submit" class="btn btn-primary">Login</button>
                <a role="button" class="btn btn-secondary" href="/">Cancel</a>
            </EditForm>
        </div>
    </div>
}


@code {
    [SupplyParameterFromForm]
    private LoginDetails? loginDetails { get; set; }
    protected override void OnParametersSet()
    {
        loginDetails = new()
            {
                Id = 0,
                Username = String.Empty,
                Password = String.Empty
            };
    }
    private async Task HandleSubmitAsync()
    {
        ArgumentNullException.ThrowIfNull(loginDetails);
        var user = await loginClient.LoginUserAsync(loginDetails.Username);
        ArgumentNullException.ThrowIfNull(user);

        if (loginClient.StoreLoggedInDetails(user))
        {
            Console.WriteLine(loginClient.GetLoggedInDetails().Name);
            NavigationManager.NavigateTo("/");
        }
    }
}
