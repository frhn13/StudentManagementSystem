@page "/AddStudent"

@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<div class="mb-10">
    <PageTitle>Add a Student</PageTitle>
    <h2>Add a Student</h2>
</div>

@if (studentDetails is null)
{
    <p>Currently Loading...</p>
}
else
{
    <div class="row">
        <div class="col-md-4 flex-center">
                <EditForm Model="@studentDetails" FormName="AddStudent" OnValidSubmit="HandleSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="mb-3">
                        <label for="name" class="form-label">Name</label>
                        <InputText id="name" class="form-control" @bind-Value="studentDetails.Name" />
                        <ValidationMessage For="() => studentDetails.Name" />
                    </div>
                    <div class="mb-3">
                        <label for="age" class="form-label">Age</label>
                        <InputNumber id="age" class="form-control" @bind-Value="studentDetails.Age" />
                        <ValidationMessage For="() => studentDetails.Age" />
                    </div>
                    <div class="mb-3 form-check">
                        <label for="year" class="form-label">Year Group</label>
                        <InputNumber id="year" class="form-control" @bind-Value="studentDetails.Year" />
                        <ValidationMessage For="() => studentDetails.Year" />
                    </div>
                    <div class="mb-3">
                        <label for="mobileNumber" class="form-label">Mobile Number</label>
                        <InputText id="mobileNumber" class="form-control" @bind-Value="studentDetails.MobileNumber" />
                        <ValidationMessage For="() => studentDetails.MobileNumber" />
                    </div>
                    <div class="mb-3">
                        <label for="dob" class="form-label">Date of Birth</label>
                        <InputDate id="dob" class="form-control" @bind-Value="studentDetails.DOB" />
                        <ValidationMessage For="() => studentDetails.DOB" />
                    </div>
                    <button type="submit" class="btn btn-primary">Save Student</button>
                    <a role="button" class="btn btn-secondary" href="/">Cancel</a>
                </EditForm>
        </div>
    </div>
    
}

@code {
    [Parameter]
    public int? Id { get; set; }
    [SupplyParameterFromForm]
    private StudentDetails? studentDetails { get; set; }

    protected override void OnParametersSet()
    {
        studentDetails = new()
            {
                Name = String.Empty,
                MobileNumber = String.Empty,
                DOB = DateOnly.FromDateTime(DateTime.UtcNow)
            };
    }
    private void HandleSubmit()
    {
        ArgumentNullException.ThrowIfNull(studentDetails);
        DataManagement.AddNewStudent(studentDetails);
        NavigationManager.NavigateTo("/");
    }
}
